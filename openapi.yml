openapi: 3.0.3
info:
  version: 1.0.0
  title: APISuite Billing Extension
  description: APISuite Billing Extension REST API
  license:
    name: MPL-2.0
paths:
  /health:
    get:
      tags: [ system ]
      summary: Healthcheck endpoint
      description: >
        Checks the general health status of the app servers.
        This usually means verifying connectivity to external dependencies.
      responses:
        '200':
          description: Healthcheck result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
        '500':
          $ref: '#/components/responses/Internal'
  /metrics:
    get:
      tags: [ system ]
      summary: System metrics for Prometheus scraping
      responses:
        '200':
          description: Prometheus metrics
          content:
            text/plain:
              schema:
                type: string
  /packages:
    get:
      tags: [ packages ]
      description: List credit packages
      security:
        - cookieAuth: [ ]
      responses:
        '200':
          description: Package model list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Package'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    post:
      tags: [ packages ]
      description: Create a package
      security:
        - cookieAuth: [ ]
      responses:
        '201':
          description: Package model
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Package'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /packages/{id}:
    get:
      tags: [ packages ]
      description: Show a package by id.
      security:
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: Package ID
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Package model
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Package'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags: [ packages ]
      description: Update a package.
      security:
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: Package ID
          required: true
          schema:
            type: number
      requestBody:
        description: New package data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                credits:
                  type: number
      responses:
        '200':
          description: package model
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Package'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags: [ packages ]
      description: Delete a package.
      security:
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: Package ID
          required: true
          schema:
            type: number
      responses:
        '204':
          description: No content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /subscriptions:
    get:
      tags: [ subscriptions ]
      description: List subscriptions
      security:
        - cookieAuth: [ ]
      responses:
        '200':
          description: Subscription model list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Subscription'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    post:
      tags: [ subscriptions ]
      description: Create a subscription
      security:
        - cookieAuth: [ ]
      responses:
        '201':
          description: Subscription model
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subscription'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /subscriptions/{id}:
    get:
      tags: [ subscriptions ]
      description: Show a subscription by id.
      security:
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: Subscription ID
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Subscription model
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subscription'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags: [ subscriptions ]
      description: Update a subscription.
      security:
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: Subscription ID
          required: true
          schema:
            type: number
      requestBody:
        description: New subscription data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                credits:
                  type: number
                periodicity:
                  type: string
      responses:
        '200':
          description: package model
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Subscription'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags: [ subscriptions ]
      description: Delete a subscription.
      security:
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: Subscription ID
          required: true
          schema:
            type: number
      responses:
        '204':
          description: No content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{id}:
    get:
      tags: [ users ]
      description: >
        Returns a user based on the ID.
        This also sets up the user if it doesn't exist yet in the extension's context.
      security:
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: ID of user to fetch
          required: true
          schema:
            type: number
      responses:
        '200':
          description: User model
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /users/{id}/consent:
    post:
      tags: [ users ]
      description: >
        Creates an associated customer in the payment processor.
        Creates a first time payment for consent purposes.
      security:
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: number
      responses:
        '302':
          description: Payment processor checkout page redirect
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/{id}/credits:
    post:
      tags: [ users ]
      description: >
        Manage (add/subtract) user's credits. Only accessible to admin users.
        User can't manage own credits.
      security:
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: number
      requestBody:
        description: Credits management payload
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                credits:
                  type: number
      responses:
        '302':
          description: Payment processor checkout page redirect
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /users/{id}/subscriptions:
    delete:
      tags: [ users ]
      description: Cancels a user subscription
      security:
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: number
      responses:
        '204':
          description: No content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /purchases:
    get:
      tags: [ purchases ]
      description: List user's purchases/transactions
      security:
        - cookieAuth: [ ]
      responses:
        '200':
          description: Purchase model list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Purchase'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /purchases/packages/{id}:
    post:
      tags: [ purchases ]
      description: Purchase a credits package
      security:
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: Package ID
          required: true
          schema:
            type: number
      responses:
        '302':
          description: Payment processor checkout page redirect
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /purchases/subscriptions/{id}:
    post:
      tags: [ purchases ]
      description: Purchase a subscription
      security:
        - cookieAuth: [ ]
      parameters:
        - name: id
          in: path
          description: Subscription ID
          required: true
          schema:
            type: number
      responses:
        '204':
          description: No content
        '302':
          description: Payment processor checkout page redirect
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: number
        credits:
          type: number
        subscriptionId:
          type: string
        ppCustomerId:
          type: string
        ppMandateId:
          type: string
        ppSubscriptionId:
          type: string
    Package:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        price:
          type: number
        credits:
          type: number
    Subscription:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        price:
          type: number
        credits:
          type: number
        periodicity:
          type: string
    Purchase:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        method:
          type: number
        status:
          type: number
        amount:
          type: object
          properties:
            value:
              type: string
            currency:
              type: string
        createdAt:
          type: string
    Health:
      type: object
      properties:
        status:
          type: string
        time:
          type: string
          format: date-time
    Error:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string


  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Internal:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: access_token
